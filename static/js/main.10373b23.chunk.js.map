{"version":3,"sources":["Context.js","Components/contacts/Contact.js","Components/contacts/Contacts.js","Components/layout/Header.js","Components/layout/TextInputGroup.js","Components/contacts/AddContact.js","Components/contacts/EditContact.js","Components/pages/About.js","Components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_React$Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onExpandClick","e","onDeleteClick","delete","_this2","_this$props$contact","name","email","phone","className","style","cursor","onClick","float","color","bind","react_router_dom","to","marginRight","Contacts","Fragment","contacts_Contact","Header","branding","defaultProps","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","onFieldChange","defineProperty","target","onFormSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this$state2","onSubmit","layout_TextInputGroup","EditContact","updatedContact","match","params","put","About","NotFound","App","Context_Provider","layout_Header","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.10373b23.chunk.js","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n    switch(action.type) {\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contact => \r\n                    contact.id !== action.payload\r\n                    )\r\n            };\r\n        case 'ADD_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: [action.payload, ...state.contacts]\r\n            };\r\n        case 'UPDATE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(contact => \r\n                    contact.id === action.payload.id ?\r\n                    (contact = action.payload) : contact)\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n};\r\n\r\nexport class Provider extends React.Component {\r\n    state = {\r\n        contacts: [],\r\n        dispatch: action => {\r\n            this.setState(state => reducer(state, action))\r\n        }\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n        this.setState({\r\n            contacts: res.data\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        );\r\n    }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'axios';\r\nimport { Consumer } from '../../Context';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Contact extends React.Component {\r\n    state = {\r\n        showContactInfo: false\r\n    };\r\n\r\n    onExpandClick = (e) => {\r\n        this.setState({ showContactInfo: !this.state.showContactInfo });\r\n    }\r\n\r\n    onDeleteClick = async (id, dispatch) => {\r\n        await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n        dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n    }\r\n\r\n    render() {\r\n        const { name, email, phone, id } = this.props.contact;\r\n        const { showContactInfo } = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n               {value => {\r\n                   const { dispatch } = value;\r\n                   return (\r\n                    <div className='card card-body mb-3'>\r\n                        <h4>\r\n                            {name} \r\n                            <i\r\n                                style={{cursor: 'pointer'}}\r\n                                onClick={this.onExpandClick} \r\n                                className='fas fa-sort-down' \r\n                            />\r\n                            <i \r\n                                className='fas fa-times' \r\n                                style={{ cursor: 'pointer',\r\n                                    float: 'right', \r\n                                    color: 'red' \r\n                                }} \r\n                                onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                            />\r\n                            <Link to={`/contact/edit/${id}`}>\r\n                                <i \r\n                                    className='fas fa-pencil-alt' \r\n                                    style={{\r\n                                        cursor: 'pointer',\r\n                                        float: 'right',\r\n                                        color: 'black',\r\n                                        marginRight: '1rem'\r\n                                    }}\r\n                                />\r\n                            </Link>\r\n                        </h4>\r\n                        {showContactInfo ? (\r\n                            <ul className='list-group'>\r\n                            <li className='list-group-item'>Email: {email}</li>\r\n                            <li className='list-group-item'>Phone: {phone}</li>\r\n                        </ul>\r\n                        ) : null }\r\n                    </div>\r\n                   )\r\n               }} \r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nContact.propTypes = {\r\n    contact: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport Contact from './Contact';\r\n\r\nimport { Consumer } from '../../Context';\r\n\r\nclass Contacts extends React.Component {\r\n    render() {\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { contacts } = value;\r\n                    return (\r\n                        <React.Fragment>\r\n                            <h1 className='display-4 mb-2'>\r\n                                <span className='text-danger'>Contact</span> List\r\n                            </h1>\r\n                            { contacts.map((contact) => {\r\n                            return (\r\n                                <Contact \r\n                                    key={contact.id}\r\n                                    contact={contact}\r\n                                    />\r\n                            )}) \r\n                            }\r\n                        </React.Fragment>\r\n                    );\r\n                }}\r\n            </Consumer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contacts;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n            <div className='container'>\r\n                <Link to='/' className='navbar-brand'>{props.branding}</Link>\r\n                <div>\r\n                    <ul className='navbar-nav mr-auto'>\r\n                        <li className='nav-item'>\r\n                            <Link to='/' className='nav-link'>\r\n                                <i className='fas fa-home' /> Home\r\n                            </Link>\r\n                        </li>\r\n                        <li className='nav-item'>\r\n                            <Link to='/contact/add' className='nav-link'>\r\n                                <i className='fas fa-plus' /> Add\r\n                            </Link>\r\n                        </li>\r\n                        <li className='nav-item'>\r\n                            <Link to='/about' className='nav-link'>\r\n                                <i className='fas fa-question' /> About\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nHeader.defaultProps = {\r\n    branding: 'Contact Manager'\r\n}\r\n\r\nHeader.propTypes = {\r\n    branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst TextInputGroup = ({\r\n    label,\r\n    name,\r\n    value,\r\n    placeholder,\r\n    type,\r\n    onChange,\r\n    error\r\n}) => {\r\n    return (\r\n        <div className='form-group'>\r\n            <label htmlFor={name}>{label}</label>\r\n            <input \r\n                className={classnames('form-control form-control-lg', {\r\n                    'is-invalid': error\r\n                })}\r\n                name={name}\r\n                type={type}\r\n                placeholder={placeholder}\r\n                value={value}\r\n                onChange={onChange}\r\n            />\r\n            {error && <div className='invalid-feedback'>{error}</div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string\r\n}\r\n\r\nTextInputGroup.defaultProps = {\r\n    type: 'text'\r\n}\r\n\r\nexport default TextInputGroup;","import React from 'react';\r\nimport { Consumer } from '../../Context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends React.Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    }\r\n\r\n    onFieldChange = (e) => this.setState({\r\n        [e.target.name]: e.target.value\r\n    });\r\n\r\n    onFormSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n        const { name, email, phone } = this.state;\r\n        // Check for errors in form\r\n        if(name === '') {\r\n            this.setState({errors: {name: 'Name is required' }});\r\n            return;\r\n        }\r\n        if(email === '') {\r\n            this.setState({errors: {email: 'Email is required'}});\r\n            return;\r\n        }\r\n        if(phone === '') {\r\n            this.setState({errors: {phone: 'Phone is required'}});\r\n            return;\r\n        }\r\n\r\n        const newContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        };\r\n\r\n        const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact);\r\n        dispatch({ type: 'ADD_CONTACT', payload: res.data });\r\n\r\n        // Clear State on form submission - also clears inputs\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {}\r\n        });\r\n\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    render () {\r\n        const { name, email, phone, errors } = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className='card mb-3'>\r\n                            <div className='card-header'>\r\n                                Add Contact\r\n                            </div>\r\n                            <div className='card-body'>\r\n                                <form onSubmit={this.onFormSubmit.bind(this, dispatch)}>\r\n                                    <TextInputGroup\r\n                                        label='Name'\r\n                                        name='name'\r\n                                        placeholder='Enter Name'\r\n                                        value={name}\r\n                                        onChange={this.onFieldChange}\r\n                                        error={errors.name}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        label='Email'\r\n                                        name='email'\r\n                                        type='email'\r\n                                        placeholder='Enter Email'\r\n                                        value={email}\r\n                                        onChange={this.onFieldChange}\r\n                                        error={errors.email}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        label='Phone'\r\n                                        name='phone'\r\n                                        placeholder='Enter Phone'\r\n                                        value={phone}\r\n                                        onChange={this.onFieldChange}\r\n                                        error={errors.phone}\r\n                                    />\r\n                                    <input type='submit' \r\n                                        value='Add Contact' \r\n                                        className='btn btn-light btn-block' \r\n                                    />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                }}\r\n            </Consumer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddContact;","import React from 'react';\r\nimport { Consumer } from '../../Context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends React.Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n        const contact = res.data;\r\n\r\n        this.setState({\r\n            name: contact.name,\r\n            email: contact.email,\r\n            phone: contact.phone\r\n        });\r\n    }\r\n\r\n    onFieldChange = (e) => this.setState({\r\n        [e.target.name]: e.target.value\r\n    });\r\n\r\n    onFormSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n        const { name, email, phone } = this.state;\r\n        // Check for errors in form\r\n        if(name === '') {\r\n            this.setState({errors: {name: 'Name is required' }});\r\n            return;\r\n        }\r\n        if(email === '') {\r\n            this.setState({errors: {email: 'Email is required'}});\r\n            return;\r\n        }\r\n        if(phone === '') {\r\n            this.setState({errors: {phone: 'Phone is required'}});\r\n            return;\r\n        }\r\n\r\n        const updatedContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n\r\n        const { id } = this.props.match.params;\r\n\r\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updatedContact);\r\n        \r\n        dispatch({type: 'UPDATE_CONTACT', payload: res.data});\r\n        \r\n        // Clear State on form submission - also clears inputs\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {}\r\n        });\r\n\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    render () {\r\n        const { name, email, phone, errors } = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className='card mb-3'>\r\n                            <div className='card-header'>\r\n                                Edit Contact\r\n                            </div>\r\n                            <div className='card-body'>\r\n                                <form onSubmit={this.onFormSubmit.bind(this, dispatch)}>\r\n                                    <TextInputGroup\r\n                                        label='Name'\r\n                                        name='name'\r\n                                        placeholder='Enter Name'\r\n                                        value={name}\r\n                                        onChange={this.onFieldChange}\r\n                                        error={errors.name}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        label='Email'\r\n                                        name='email'\r\n                                        type='email'\r\n                                        placeholder='Enter Email'\r\n                                        value={email}\r\n                                        onChange={this.onFieldChange}\r\n                                        error={errors.email}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        label='Phone'\r\n                                        name='phone'\r\n                                        placeholder='Enter Phone'\r\n                                        value={phone}\r\n                                        onChange={this.onFieldChange}\r\n                                        error={errors.phone}\r\n                                    />\r\n                                    <input type='submit' \r\n                                        value='Update Contact' \r\n                                        className='btn btn-light btn-block' \r\n                                    />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                }}\r\n            </Consumer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditContact;","import React from 'react';\r\n\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            <h1 className='display-4'>About Contact Manager</h1>\r\n            <p className='lead'>Simple app to manage contacts</p>\r\n            <p className='text-secondary'>Version 1.0.0</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default About;","import React from 'react'\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div>\r\n        <h1 className='display-4'>\r\n            <span className='text-danger'>404</span> Page Not Found\r\n        </h1>\r\n        <p className='lead'>Sorry, that page does not exist!</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;","import React, { Component } from 'react';\r\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Contacts from './Components/contacts/Contacts';\r\nimport Header from './Components/layout/Header';\r\nimport AddContact from './Components/contacts/AddContact';\r\nimport EditContact from './Components/contacts/EditContact';\r\nimport About from './Components/pages/About';\r\nimport NotFound from './Components/pages/NotFound';\r\n\r\nimport { Provider } from './Context';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider>\r\n        <Router>\r\n          <div className=\"App\">\r\n            <Header branding='Contact Manager' />\r\n            <div className='container'>\r\n              <Switch>\r\n                <Route exact path='/' component={Contacts} />\r\n                <Route exact path='/contact/add' component={AddContact} />\r\n                <Route exact path='/contact/edit/:id' component={EditContact} />\r\n                <Route exact path='/about' component={About} />\r\n                <Route component={NotFound} />\r\n              </Switch>\r\n            </div>\r\n          </div>\r\n        </Router>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}